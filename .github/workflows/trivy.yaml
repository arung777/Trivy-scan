name: Trivy Image Scan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'application/**'
  push:
    branches:
      - main
    paths:
      - 'application/**'

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Trivy
        uses: aquasecurity/trivy-action@master

      - name: Extract container images from manifests
        id: extract-images
        run: |
          # Recursive find image references in YAML files, exclude empty/dot lines
          grep -rho 'image:[ ]*[^ ]*' application/**/*.yaml | awk '{print $2}' | grep -vE '^\s*$|^\.$' | sort | uniq > images.txt
          echo "Images to scan:"
          cat images.txt
      
      - name: Run Trivy scan on all referenced images with validation and generate SARIF
        run: |
          set -e
          while read image; do
            if [[ -z "$image" || "$image" == "." ]]; then
              echo "Skipping invalid or empty image name: '$image'"
              continue
            fi
            echo "Scanning image $image"
            trivy image --severity HIGH,CRITICAL --ignore-unfixed --format sarif --output "trivy-report-$image.sarif" "$image"
          done < images.txt

      - name: Upload Trivy SARIF reports to Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-report-*.sarif

      - name: Upload Trivy scan reports as artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: trivy-report-*.sarif
